@using ProjetoFinal.Models
@model Local

@{
    ViewData["Title"] = "Create";
}

<h1>Create</h1>

<h4>Local</h4>
<form asp-action="Create" method="post" enctype="multipart/form-data">
    <div class="form-group">
        <label asp-for="Nome" class="control-label"></label>
        <input asp-for="Nome" class="form-control" />
        <span asp-validation-for="Nome" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="Descricao" class="control-label"></label>
        <textarea asp-for="Descricao" class="form-control"></textarea>
        <span asp-validation-for="Descricao" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="Endereco" class="control-label"></label>
        <input asp-for="Endereco" class="form-control" />
        <span asp-validation-for="Endereco" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="PrecoPorNoite" class="control-label"></label>
        <input asp-for="PrecoPorNoite" class="form-control" />
        <span asp-validation-for="PrecoPorNoite" class="text-danger"></span>
    </div>

    <!-- Novo campo de upload de múltiplas imagens -->
    <div class="form-group">
        <label for="imagensFile">Imagens</label>
        <input type="file" name="imagensFile" multiple class="form-control" />
    </div>

    <!-- Novo campo para descrever cada imagem -->
    <div id="imageDescriptions" class="form-group">
        <label for="descricaoImagens">Descrições das Imagens</label>
        <div id="descricaoImagensContainer">
            <!-- Aqui você pode adicionar campos dinamicamente via JavaScript -->
        </div>
    </div>

    <button type="submit" class="btn btn-primary">Criar Local</button>
</form>

@section Scripts {
    <script>
        // Função para gerar campos de descrição com base no número de arquivos selecionados
        const fileInput = document.querySelector('input[name="imagensFile"]');
        const descricaoContainer = document.getElementById('descricaoImagensContainer');

        fileInput.addEventListener('change', function() {
            // Limpa o container de descrições antes de adicionar novos
            descricaoContainer.innerHTML = '';

            // Para cada arquivo selecionado, cria um campo de descrição
            for (let i = 0; i < fileInput.files.length; i++) {
                
                const input = document.createElement('input');
                input.type = 'text';
                input.name = `descricaoImagens[${i}]`;
                input.className = 'form-control';
                input.placeholder = 'Descrição da imagem';
                descricaoContainer.appendChild(input);
                descricaoContainer.appendChild(document.createElement('br'));
            }
        });

        @{
            await Html.RenderPartialAsync("_ValidationScriptsPartial");
        }
    </script>
}

